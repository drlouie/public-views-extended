#!/usr/bin/perl5 -s

# print "Content-type: text/html\n\n";

## --> Snif cookie, if present test for logged in status
## --> LOGin not REQuired
$logreq = 1;
require ("cookiesnif.nsp");

## --> Parse Request Query
require ("parse_query.nsp");

$noDateParse = 1;
require ("dateNewest.nsp");

$galleryDirectory = "/usr/local/www/vhosts/nightvisiononline.com/htdocs/MyGallery/";
$albumDirectory = "/usr/local/www/vhosts/nightvisiononline.com/htdocs/PhotoAlbums/";

$miPile = "";
$myPhotos = "";
$losPhotos = "";
$allTimes = 0;
$jpg = '.jpg';
$jpeg = '.jpeg';
$png = '.png';

if ($CSen eq "SI") {
	$myCSin = int($CSin);
	
	$todosTimesRated = 0;
	$allCommentsCounted = 0;

	$myPhotos = "<table>";
	$losPhotos = "\n<select onChange=\"cambiameTwo();\" name=\"photoChoice\" class=\"albumSelector\">\n";	
	$losPhotos = $losPhotos . "<option value=\"BIGNULL\"> - - - - - - - - - - - - - - - - - - - </option>\n";	

	## -->  CONNECT TO DB
	use DBI;
	my $dbh = DBI->connect("DBI:mysql:NVF".$thyHost,$thyRU,$thyRP) or die "Unable to connect to database: <b>$elDB</b>\n"; 
	$dbh->{RaiseError} = 1;
	

	my $sth = $dbh->prepare("SELECT * FROM Albums where Owner = '$myCSin' ORDER BY LastUpdated DESC");
	$sth->execute or die "Unable to execute query\n";
	my @row;
	while(@row = $sth->fetchrow_array) {
		$AID = $row[0];
		$Title = $row[1];
		$Items = $row[3];
		$AddedOn = $row[12];
		$LAD = $row[12];
		$estaD = "$albumDirectory" . "$Title";
		if (-e $estaD) {
			push(@albumos,"$AID");
			push(@albumoTitulos,"$Title");
			push(@albumoItems,"$Items");
			push(@albumoADD,"$AddedOn");
			push(@albumoLAD,"$LAD");
		}
	}
	$sth->execute or die "Unable to execute query\n";
	$sth->finish;
		
	$cALbum = 0;
	foreach $ALBUM (@albumos) {
		@losItems = "";
		@losItems = split(/,/,$albumoItems[$cALbum]);
		$esteAlbumTitle = $albumoTitulos[$cALbum];
		$esteAlbumADD = $albumoADD[$cALbum];
		$esteAlbumLAD = $albumoLAD[$cALbum];
		$PhotoInlineCount = 0;
		$ChosenInlineCount = 1;
		
		$displayAT = $esteAlbumTitle;
		$displayAT =~ s/_/ /g;

		($mdt1, $mtm1) = split(/ /,$esteAlbumADD);
		($myr1, $mmt1, $mdy1) = split(/-/,$mdt1);
		$ADDSHORT = "&lt;i&gt;created: " . $months[int($mmt1-1)] . " " . $mdy1 . ", " . $myr1 . "&lt;/i&gt;";

		($mdt2, $mtm2) = split(/ /,$esteAlbumLAD);
		($myr2, $mmt2, $mdy2) = split(/-/,$mdt2);
		$LADSHORT = "&lt;i&gt;last update: " . $months[int($mmt2-1)] . " " . $mdy2 . ", " . $myr2 . "&lt;/i&gt;";
		

		## -->  GET PAGE CONTENT
		foreach $LI (@losItems) {
			$LI = int($LI);
			$PID = ""; $FiNa = ""; $ArtComment = ""; $estaF = "";
			my $sth = $dbh->prepare("SELECT * FROM losPhotos where ImageID = '$LI'");
			$sth->execute or die "Unable to execute query\n";
			my @row;
			while(@row = $sth->fetchrow_array) {
				$UserComment = '';
				$Rating = '';
				$PID = $row[0];
				$FiNa = $row[2];
				$ArtComment = $row[5];
				$UserComment = $row[6];
				$Rating = $row[8];
				$estaF = "$albumDirectory" . "$esteAlbumTitle" . "/" . "$FiNa";
				$estaPhoto = "/PhotoAlbums/" . "$esteAlbumTitle" . "/" . "$FiNa";
				if (-e $estaF) {
					$CUC = 0;
					@allUCs = "";
					$PID = int($PID);
					$FileNameClean = substr($FiNa, 9);
					$FileNameClean =~ s/$jpg//gi;
					$FileNameClean =~ s/$jpeg//gi;
					$FileNameClean =~ s//$png/gi;
					$FileNameClean =~ s/_/ /gi;
					$FileNameClean =~ s/`/'/gi;

					##-- count how many times rated
					$cr = 0; $times = 0;
					($cr,$times) = split(/-----/,$Rating);
					$times = int($times);
					$allTimes = int($allTimes + $times);

					##-- count user comments
					if ($UserComment =~ "-----xxxxx-----"){ @allUCs = split(/-----xxxxx-----/,$UserComment); $CUC = int(@allUCs); }
					elsif ($UserComment =~ "%%%%%") { $CUC = 1; }
					else { $CUC = 1; }
					
					$allCommentsCounted = int($allCommentsCounted + $CUC);

					if ($ArtComment ne "") {
						$ArtComment =~ s/\n/$HTMLBR/gi;
						$ArtComment =~ s/\r//gi; ## remove unwanted
						$ArtComment =~ s/\t//gi; ## remove unwanted
						$ArtComment =~ s/\n//gi; ## remove unwanted
						$ArtComment =~ s/\f//gi; ## remove unwanted
						$ArtComment =~ s/^\s+//g; ### remove leading spaces
						$ArtComment =~ s/\s+$//g; ### remove trailing spaces
						$ArtComment =~ s/"/$HTMLQUOTE/gi;
					}


					$PhotoInlineCount++;
					$miLayer = "PHOTO" . "$PID";
#					if ($myPhotos =~ "$test") {
						$myPhotos = $myPhotos . "<tr><td style=\"padding-left:8px; padding-top:9px;\"><div id='$miLayer' style=\"visibility:visible;background-color:#000000;position:relative;top:0px;left:0px;padding:10px;border:#D6D6D6 1px solid;\"><img src=\"$estaPhoto\" id=\"PHOTO_$PID\" width=\"60\" style=\"border:#000000 1px solid;\" /></div></tr></td>\n";
						$losPhotos = $losPhotos . "<option value=\"$PID\">$FileNameClean</option>\n";
#					}
					
					
					## push(@allDRAG,"$miLayer");
				}
			}
			$sth->execute or die "Unable to execute query\n";
			$sth->finish;
		}

	}
	$dbh->disconnect;


	$myPhotos = $myPhotos . "</table>";
	$losPhotos = $losPhotos . "</select>\n\n",	
}




1;